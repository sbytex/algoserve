#!/usr/bin/env bash

set -e
set -u
set -o pipefail

DRY_RUN="0"

while [[ $# -gt 0 ]]; do
    if [[ "$1" == "--dry" ]]; then
        DRY_RUN="1"
    fi
    shift
done

log() {
    local level="INFO"
    local message="$1"
    if [[ "$#" -ge 2 ]]; then
        level="$1"
        message="$2"
    fi

    if [[ "$DRY_RUN" == "1" ]]; then
        echo "[DRY:$level] $(date +'%Y-%m-%d %H:%M:%S') - $message"
    else
        echo "[$level] $(date +'%Y-%m-%d %H:%M:%S') - $message"
    fi
}

# Function to execute a command and check its success, respecting dry run mode
execute() {
    if [[ "$DRY_RUN" == "0" ]]; then
        if ! "$@"; then
            log "ERROR" "Command failed: $*"
            exit 1 # Exit the script on command failure
        fi
    fi
}

get_question_title() {
    if [[ -f "tempq.md" ]]; then
        awk '/^# /{print substr($0, 3); exit}' tempq.md | tr -d '\r'
    else
        echo "Untitled"
    fi
}

#  Main Script Logic 

round=0
while true; do
    round=$((round + 1))
    answer="n"
    read -p "Are you ready to attempt a LeetCode problem (y/n)? " answer

    if [[ "$answer" != "y" ]]; then
        log "INFO" "Exiting script."
        exit 0
    fi

    log "INFO" "Starting round $round"
    log "INFO" "Waiting for a successful submit from LeetCode..."
    log "INFO" "Also, don't get it wrong! ðŸ˜‰"

    # Run the listen command and check its exit status
    if execute node algoserve.js listen; then
        log "SUCCESS" "Great success! Looks like you live another day."

        # --- Actions to perform on successful submission ---

        log "INFO" "Attempting to extract question details..."
        # Extract the question content into tempq.md
        if ! execute node algoserve.js extract; then
            log "ERROR" "Failed to extract question. Skipping file processing."
            # Continue the loop for the next round, or exit if you prefer
            continue
        fi

        # Check if tempq.md exists before proceeding with appending
        if [[ ! -f "tempq.md" ]]; then
            log "ERROR" "tempq.md not found after extraction. Cannot proceed with file processing."
            continue
        fi

        PRAC_JS_PROCESSED=0

        # Append solution from prac.js to tempq.md if it exists
        if [[ -f "prac.js" ]]; then
            log "INFO" "Appending solution from prac.js to tempq.md"
            # Use a temporary file for safe appending
            TEMP_QINFO=$(mktemp)
            execute cp "tempq.md" "$TEMP_QINFO" 
            echo -e "\n\`\`\`javascript" >> "$TEMP_QINFO" 
            execute cat prac.js >> "$TEMP_QINFO"
            echo -e "\n\`\`\`" >> "$TEMP_QINFO" 
            execute mv "$TEMP_QINFO" "tempq.md" 
            PRAC_JS_PROCESSED=1
        else
            log "WARN" "prac.js not found. Skipping solution append."
        fi


        QUESTION_TITLE=$(get_question_title)
        if [[ "$QUESTION_TITLE" != "Untitled" ]]; then
            SANITIZED_TITLE=$(echo "$QUESTION_TITLE" | iconv -t ascii//TRANSLIT | sed 's/[^a-zA-Z0-9 ]//g' | sed 's/ /-/g' | tr '[:upper:]' '[:lower:]')
            NEW_FILENAME="${SANITIZED_TITLE}.md"
            FINAL_PATH="chest/$NEW_FILENAME" 


            if [[ ! -d "chest" ]]; then
                log "INFO" "Creating directory: chest"
                execute mkdir -p "chest"
            fi

            if [[ -f "$FINAL_PATH" ]]; then
                log "WARN" "Target file '$FINAL_PATH' already exists. Skipping rename and move to avoid overwrite."
            else
                execute mv "tempq.md" "$NEW_FILENAME"
                log "INFO" "Renamed tempq.md to $NEW_FILENAME"

                execute mv "$NEW_FILENAME" "$FINAL_PATH"
                log "INFO" "Moved $NEW_FILENAME to $FINAL_PATH"

                # --- Git commands (uncomment to enable) ---
                log "INFO" "Adding to Git and pushing..."
                execute git add "$FINAL_PATH" 
                if git diff --cached --exit-code --quiet; then
                    log "INFO" "No changes to commit for '$FINAL_PATH'."
                else
                    execute git commit -m "Add LeetCode solution: $QUESTION_TITLE"
                    execute git push origin main 
                fi
            fi
        else
            log "WARN" "Could not get question title. tempq.md remains as is and will not be moved or committed."
        fi


        if [[ "$PRAC_JS_PROCESSED" -eq 1 ]]; then
            if [[ -f "prac.js" ]]; then  
                log "INFO" "Removing prac.js"
                # execute rm "prac.js"
            fi
        fi

        log "INFO" "File processing finished for this round."

    else 
        log "ERROR" "You have failed me for the last time."
        log "INFO" "Goodbye."
        exit 1 
    fi
done

